<?php
    $this->jQuery('extension/fileupload-min.js');
    $this->bootstrap(array('datepicker/datepicker.css','datepicker/bootstrap-datepicker.js','datepicker/locales/bootstrap-datepicker.zh-CN.js', 'js/bootstrap-typeahead.js'));
    $this->css($this->assetModule('script/article-ui.css'));
    $this->Backbone();
?>

<style>
    .progress .bar {
          -webkit-transition: width .01s;
          -moz-transition: width .01s;
          -o-transition: width .01;
          transition: width .01s;
    }
    .form-inline {
        margin-bottom: 8px;
    }
    .form-inline strong {
        display: inline-block;
        width: 90px;
        text-align: right;
        margin-right: 6px;
    }
    .dropdown-menu a {
        padding: 1px 12px;
    }
    .reject-modal {
        position: absolute;
        margin: 0;
        top: 10px;
        left: 0;
        width: 286px;
    }
    #jsReject {
        color: #36AAE3;
        font-size: 16px;
        cursor: pointer;
    }
    span.cke_skin_kama {
        border: 1px solid #ccc;
    }
    span.cke_skin_kama {
        padding: 0;
    }
    .cke_1 .cke_wrapper, .cke_1_dialog .cke_dialog_contents, .cke_1_dialog a.cke_dialog_tab, .cke_1_dialog .cke_dialog_footer {
        background: #eee !important;
    }
    .cke_skin_kama .cke_wrapper {
        border-radius: 0;
    }
    .ml98 {
        margin-left: 98px;
    }
    .input-col3 .span2 {
        width: 12.6834%;
    }
    .col2-select .span3 {
        width: 26.3%;
    }
    .select-list {
        overflow: hidden;
    }
    #jsAlert >strong {
        float: left;
        width: 90px;
        text-align: right;
    }
    #jsAlert >div {
        margin-left: 105px;
    }

</style>

<?php if (isset($error)) { ?>
<div class="alert alert-error">
    <button class="close" data-dismiss="alert" type="button">×</button>
    <?php echo $this->escape($error) ?>
</div>
<?php } elseif (isset($message)) { ?>
<div class="alert alert-success">
    <button class="close" data-dismiss="alert" type="button">×</button>
    <?php echo $this->escape($message) ?>
</div>
<?php } ?>

<form class="row-fluid" method="POST" enctype="multipart/form-data" action="<?php echo $form->getAttribute("action") ?>" onkeypress="return event.keyCode != 13;">
    <div class="span8">
        <a href="#" target="_blank" class="hide hide-preview"></a>
        <?php $hiddens = array('security', 'article', 'id', 'fake_id', 'uid', 'jump', 'time_publish');
        foreach ($hiddens as $value) {
            echo $this->formElement($form->get($value));
        }
        if (in_array('author', $elements)) {
            echo $this->formElement($form->get('author'));
        }
        if (in_array('related', $elements)) {
            echo $this->formElement($form->get('related'));
        }
        ?>
        <div id="jsBasicInput">
            <?php if (in_array('subject', $elements)) { ?>
            <div class="form-inline">
                <strong><?php _e('Subject:') ?></strong>
                <?php $element = $form->get('subject');
                    $element->setAttribute("class","control-word span6");
                    echo $this->formElement($element);
                ?>
                <span><span class="left-wrod"></span><?php echo __('Character left') ?></span>
                <label class="checkbox" style="margin: 0 5px 0 10px;">
                    <input type="checkbox" class="subtitle-check" <?php $subtitle = $form->get('subtitle')->getValue(); if ($subtitle) echo "checked" ?>><?php _e('Subtitle') ?>
                </label>
            </div>
            <?php } ?>
            <?php if (in_array('subtitle', $elements)) { ?>
            <div class="form-inline subtitle <?php if (!$subtitle) echo "hide" ?>">
                <strong><?php _e('Subtitle:') ?></strong>
                <?php $element = $form->get('subtitle');
                    $element->setAttribute("class","control-word span7");
                    echo $this->formElement($element);
                ?>
                <span><span class="left-wrod"></span><?php echo __('Character left') ?></span>
            </div>
            <?php } ?>
            <div class="form-inline input-col3">
                <?php if (in_array('category', $elements)) { ?>
                <strong><?php _e('Category:') ?></strong>
                <?php $element = $form->get('category');
                    $element->setAttribute("class", "span3");
                    if (!empty($draft['article'])) {
                        $element->setAttribute("disabled", "disabled");
                    }
                    echo $this->formElement($element); ?>
                <?php } ?>
                <?php if (in_array('source', $elements)) { ?>
                <strong><?php _e('Source:') ?></strong>
                <?php $element = $form->get('source');
                    $element->setAttribute("class", "span2");
                    echo $this->formElement($element); ?>
                <?php } ?>
                <?php if (in_array('author', $elements)) { ?>
                <strong><?php _e('Author:') ?></strong>
                <input type="text" class="author span2" value="<?php echo isset($author['name']) ? $author['name'] : ''; ?>"/>
                <?php } ?>
                <?php if (!empty($user['name'])) { ?>
                <strong><?php _e('Submitter:') ?></strong>
                <input type="text" class="submitter span2" value="<?php echo $user['name']; ?>"/>
                <?php } ?>
            </div>
            <?php if (!empty($config['enable_summary']) and in_array('summary', $elements)) { ?>
            <div class="form-inline clearfix">
                <div>
                    <strong style="vertical-align: top;"><?php _e('Summary:'); ?></strong>
                    <?php $element = $form->get('summary');
                        $element->setAttributes(array(
                            "class"=>"control-word span7",
                            "rows" => "4"
                        ));
                        echo $this->formElement($element); ?>
                    <div style="display:inline-block;vertical-align:top;">
                        <span class="left-wrod" style=""></span><?php echo __('words left') ?>
                    </div>
                </div>
            </div>
            <?php } ?>
        </div>
        <?php if (in_array('content', $elements)) { ?>
        <div class="ml98 widget">
            <?php $element = $form->get('content');
                echo $this->formElement($element); ?>
        </div>
        <?php } ?>
        <div id="jsAttachment" class="ml98">
            <div style="margin-bottom:20px;" >
                <!--<strong><?php _e('Attachment:') ?></strong>-->
                <span class="btn btn-primary fileinput-button">
                    <?php _e('Choose files') ?>
                    <input type="file" name="attachment" multiple>
                </span>
                <span class="muted">
                    <?php echo $attachment_extension ?>
                    <span style="margin-left:5px;">
                      <?php _e('Max Size:'); ?><?php echo $max_attachment_size / (1024 * 1024) . 'M'; ?>
                    </span>
                </span>
            </div>    
            <div class="clearfix attachment-list" ></div>
        </div>
    </div>
    <div class="span4">
        <div class="widget" id="jsReleaseProcess">
            <div class="widget-header">
                <?php _e('Status:') ?>
                <strong class="status">
                     <?php if ($draft['article']) {
                          _e('Published'); 
                     } else { ?>
                     <?php
                        switch ($draft['status']) {
                            case 1: _e('Draft');
                                break;
                            case 2: _e('Pending');
                                break; 
                            case 3: _e('Rejected');
                     ?>
                     <i class="icon-question-sign" id="jsReject" data-content="<?php echo $draft['memo'] ?>" data-placement="bottom">
                     </i>
                     <script>
                     (function($){
                         var el=$("#jsReject");
                         el.popover({
                             title: "Reject reason <span class='close'>×</span>",
                             html: true
                         });
                         setTimeout(function(){
                            el.popover("show").data("popover").$tip.on("click",".close",function(){
                                el.popover("hide");
                            });
                         },10);
                     })(jQuery)
                     </script>
                     <?php         
                                break;    
                            default: _e('Draft');
                                break;
                        }
                     } ?>
                </strong>
            </div>
            <div class="widget-body">
                <div class="clearfix article-flow">
                     <span class="pull-right btn preview" data-src=""><?php _e('Preview') ?></span>
                     <?php if (!$draft['article']) { ?>
                     <span class="btn btn-info save"><?php _e('Save') ?></span>    
                     <?php } ?>
                </div>
                <div class="article-flow" style="padding-top: 10px;">
                    <span class="publish-time-edit">
                        <?php if ($draft['time_publish']) { ?>
                            <?php _e('Scheduled at') ?> <strong><?php echo date('Y-m-d H:i', $draft['time_publish']); ?></strong>
                        <?php } else { 
                            _e('publish immediately');
                        } ?>
                    </span>
                    <span class="link-btn edit-time"><?php _e('Edit') ?></span>
                    <span class="link-btn save-time mr10"><?php _e('Save') ?></span>
                    <span class="link-btn cancel-time"><?php _e('Cancel') ?></span>
                    <div class="clearfix time-edit-wrap hide">
                        <div class="pull-right">
                            <div class="time-control-item">
                                <input type="text" class="input-small text-hour" maxlength="2" />
                                <div>
                                    <i class="icon-sort-up hour-sort" data-action="1"></i>
                                    <i class="icon-sort-down hour-sort"></i>
                                </div>   
                            </div>     
                            <div class="time-control-item">
                                <input type="text" class="input-small text-minute" maxlength="2" />
                                <div>
                                    <i class="icon-sort-up minute-sort" data-action="1"></i>
                                    <i class="icon-sort-down minute-sort"></i>
                                </div>   
                            </div>    
                        </div>  
                        <input id="datepicker" type="text" style="width: 110px; margin: 0;">
                    </div>
                    <p>
                        <?php if ($draft['time_save']) { ?>
                        <?php _e('Last edited at') ?><?php echo date('Y-m-d H:i', $draft['time_save']); ?> <?php _e('by'); ?> <?php echo $user['name']; ?>
                        <?php } ?> 
                    </p>
                </div>
                <div class="clearfix" style="margin-top:10px;">
                    <?php if ($draft['article']) { ?>
                    <button class="btn btn-primary pull-right update"><?php _e('Update'); ?></button>    
                    <?php } elseif ($draft['status'] == 2) { ?>
                    <div class="btn-group pull-right">
                        <button class="btn btn-primary approve"><?php _e('Approve'); ?></button>
                        <button class="btn btn-primary dropdown-toggle" data-toggle="dropdown">
                            <span class="caret"></span>
                        </button>
                        <ul class="dropdown-menu">
                            <li>
                                <a href="javascript:void(0)" data-target="#rejectModel" data-toggle="modal" data-backdrop="false"><?php _e('Reject'); ?></a></li>
                        </ul>
                    </div>
                    <div id="rejectModel" class="modal hide fade">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                            <?php _e('Reject reason') ?>
                        </div>
                        <div class="modal-body">
                            <textarea class="span12 memo"></textarea>
                        </div>
                        <div class="modal-footer">
                            <button class="btn btn-primary reject"><?php _e('Reject') ?></button>
                        </div>
                    </div>             
                    <?php } else { ?>    
                    <button class="btn btn-primary pull-right pending"><?php _e('Submit') ?></button>
                    <?php } ?>
                    <?php if ($rules['delete']) { ?>
                    <span class="link-btn delete"><?php _e('Delete') ?></span>
                    <?php } ?>
                </div>
            </div>
        </div>
        <?php if (in_array('image', $elements)) { ?>
        <div class="widget" id="jsFeature">
            <div class="widget-header">
                <strong><?php _e('Feature image') ?></strong>
            </div>
            <div class="clearfix widget-body">
                <div class="upload-image-wrap" style="cursor: default; width: <?php echo $width . 'px' ?>; height: <?php echo $height . 'px' ?>;">
                </div>
                <div class="pull-left" style="margin-top: 20px;">
                    <span class="btn fileinput-button">
                    <?php _e('Upload') ?>
                    <input type="file" name="featureImage">
                    </span>
                    <span class="muted"><?php echo _e('image size'). $width . '*' . $height ; ?></span>
                </div>
            </div>
        </div>
        <?php } ?>
        <div class="widget" id="jsGallery">
            <div class="widget-header" style="cursor:pointer;" title="<?php _e('Click toggle show'); ?>">
                <i class="icon-caret-up"></i>
                <i class="icon-caret-down"></i>
                <strong><?php _e('Image gallery'); ?></strong>
            </div>
            <div class="widget-body" style="padding-right:0;">
                <span class="btn fileinput-button">
                    <?php _e('Upload'); ?>
                    <input type="file" name="image" multiple>
                </span>
                <div class="clearfix gallery-list">
                </div>
            </div>
        </div>
        <?php if (!empty($config['enable_tag']) and in_array('tag', $elements)) { ?>
        <div class="widget" id="jsTag">
            <div class="widget-header">
                <strong><?php _e('Tags') ?></strong>
            </div>
            <div class="widget-body">
                <div class="tag-list">
                    <div class="select-list">
                    </div>    
                    <input placeholder="<?php _e('separate by commas or enter'); ?>" />
                    <ul class="typeahead dropdown-menu">
                    </ul>
                    <?php $element = $form->get('tag');
                        echo $this->formElement($element); ?>
                </div>
            </div>
        </div>
        <?php } ?>
        <?php if (in_array('slug', $elements) or in_array('seo_title', $elements) or in_array('seo_keywords', $elements) or in_array('seo_description', $elements)) { ?>
        <div class="widget" id="jsSeo">
            <div class="widget-header active" style="cursor:pointer;">
                <i class="icon-caret-up"></i>
                <i class="icon-caret-down"></i>
                <strong><?php _e('SEO'); ?></strong>
            </div>
            <div class="widget-body">
                <?php if (in_array('slug', $elements)) { ?>
                <label><?php _e('SEO url name') ?></label>
                <?php
                    $element = $form->get('slug');
                    $element->setAttribute("class", "span12");
                    echo $this->formElement($element);
                }
                ?>
                <div class="seo-other hide">
                    <?php if (in_array('seo_title', $elements)) { ?>
                    <label><?php _e('SEO title'); ?></label>
                    <?php
                        $element = $form->get('seo_title');
                        $element->setAttribute("class", "span12");
                        echo $this->formElement($element);
                    }
                    ?>
                    <?php if (in_array('seo_keywords', $elements)) { ?>
                    <label><?php _e('SEO keywords'); ?></label>
                    <?php
                        $element = $form->get('seo_keywords');
                        $element->setAttribute("class", "span12");
                        echo $this->formElement($element);
                    }
                    ?>
                    <?php if (in_array('seo_description', $elements)) { ?>
                    <label><?php _e('SEO description'); ?></label>
                    <?php
                        $element = $form->get('seo_description');
                        $element->setAttribute("class", "span12");
                        echo $this->formElement($element);
                    }
                    ?>
                </div>
            </div>
        </div>
        <?php } ?>
        <?php if (in_array('related', $elements)) { ?>
        <div class="widget" id="jsRelated">
            <div class="widget-header">
                <strong><?php _e('Related articles'); ?></strong>
            </div>
            <div class="widget-body">
                <label class="radio">
                    <span class="pull-right link-btn"><?php _e('Add'); ?></span>
                </label>
                <ul class="article-related-list">
                    
                </ul>
                <div class="modal a-related-modal hide">
                    <div class="modal-header">
                        <i class="icon-remove a-close"></i>
                        <strong><?php _e('Manage related articles'); ?></strong>
                    </div>
                    <div class="modal-body">
                        <div class="form-inline">
                            <select name="type" class="span2">
                                <option value="title"><?php echo _e('Title'); ?></option>
                                <option value="tag"><?php echo _e('Tag'); ?></option>
                            </select>
                            <input placeholder="Keywords" type="text" name="keyword" value="">
                            <span class="btn btn-search"><?php _e('Search')?></span>
                        </div>
                        <div class="row-fluid">
                            <div class="span7">
                                <div class="widget-header" >
                                    <img src="<?php echo $this->assetModule('image/wait.gif','system'); ?>" class="loadimage pull-right invisible" style="margin:2px 10px 0 0;">
                                    <strong><?php _e('Articles to be selected'); ?></strong>
                                    (<span class="searchlength">0</span>)/(<span class="searchtotal">0</span>)
                                     
                                </div>
                                <div class="widget-body a-search">
                                    <ul>
                                    </ul>
                                </div>    
                            </div>
                            <div class="span5">
                                <div class="widget-header">
                                    <strong><?php _e('Articles selected') ?></strong>
                                    <span class="existlength"></span>
                                </div>
                                <div class="widget-body a-selected">
                                    <ul>
                                    </ul>
                                </div>        
                            </div>        
                        </div>      
                    </div>
                    <div class="modal-footer">
                        <span class="btn btn-primary a-close"><?php _e('Done'); ?></span>
                    </div>        
                </div> 
            </div>
        </div>
        <?php } ?>
    </div>
</form>
<div id="jsUploadModel" class="modal hide">
</div>    
<script id="temp-upload-model" type="text/template">
    <div class="modal-header">
        <button aria-hidden="true" data-dismiss="modal" class="close close-all" type="button">×</button>
        <strong><?php _e('Error'); ?></strong>                       
    </div>
    <div class="modal-body">
        <p class="text-error"><span style="margin-right:10px;">"<%= fileName%>"</span><%= message %></p>
    </div>
    <div class="modal-footer">
        <span class="close-all btn btn-primary"><?php _e('Done'); ?></span>
    </div>        
</script>
       
<script id="temp-validate" type="text/template">
    <div class="alert <% if(status) { %>alert-success<% }else{ %>alert-error<% } %>" id="jsAlert">
        <button type="button" class="close" data-dismiss="alert">×</button>
        <% if(!_.isEmpty(message)) { %>
        <% if(_.isString(message)) { %>
            <%= message %>
            <% if(status) { %>
            <a href="<?php echo $this->url('', array('controller' => 'draft' ,'action'=>'form-add')); ?>"><?php _e('Add a new article'); ?></a>
            <% } %>
        <% } else { %>    
        <% _.each(message,function(first,key1) { %>
            <strong><%= key1 %>:</strong>
            <div>
            <% _.each(message[key1],function(second,key2) { %>
                <span class="mr10"><%= message[key1][key2] %></span>
            <% }); %>
            </div>
        <% }); %>
        <% }} %>
    </div>
</script>
<script id="temp-attachment" type="text/template">
    <div class="progress-text">
        <a href="<%= data.download_url %>" class="attachment-name"><%= data.originalName %></a>
        <div class="attachment-action">
            <% if(data.progress){ %>
            <a href="javascript:void(0)" style="margin-right:120px;" class="pull-right cancel"><?php _e('Cancel'); ?></a>
            <% } else { %>
            <a href="javascript:void(0)" class="delete visible-hide" style="margin-right:20px;"><?php _e('Delete'); ?></a>
            <a href="javascript:void(0)" class="insert"><?php _e('Insert'); ?></a>
            <% } %>
        </div>
    </div>
    <% if(data.progress){ %>
    <div class="progress progress-info">
        <div class="bar" style="width:<%= data.progress %>%;">
        </div>
    </div>
    <% } %>    
</script>
<script id="temp-feature" type="text/template">
    <% if(data.preview_url) { %>
    <div class="black-bg">
        <i class="pull-right icon-remove" style="margin-right:5px;"></i>
        <span style="inline;"><?php echo $width . '*' . $height; ?></span>
    </div>
    <img src="<%= data.preview_url %>">
    <% } %>
    <% if(data.progress) { %>
        <div class="progress progress-striped">
            <div class="bar" style="width:<%= data.progress %>%;"></div>
        </div>
    <% } %>
</script>
<script id="temp-gallery" type="text/template">
    <div class="black-bg ">
        <span class="ellipsis"><%= data.originalName %></span>
        <i class="icon-remove"></i>
    </div>
    <% if(data.preview_url) { %>
    <img src="<%= data.thumb_url %>" style="height:90px;width:100%;">
    <% } %>
    <% if(data.progress) { %>
        <div class="progress progress-striped">
            <div class="bar" style="width:<%= data.progress %>%;"></div>
        </div>
    <% } %>
</script>
<script id="temp-related-search" type="text/template">
    <%_.each(search,function(item) { %>
    <li data-id="<%= item.id %>">
        <span class="pull-right muted"><%= item.time_publish_text %></span>
        <input class="search-check" type="checkbox" <% if(_.where(exist,{id:item.id}).length) { %>checked<% } %> ><%= item.channel_title %>
        <a href="<%= item.url %>" target="_blank" class="ellipsis"  title="<%= item.subject %>"><strong><%= item.subject %></strong></a>
    <% }); %>    
</script>
<script id="temp-related-selected" type="text/template">
    <%_.each(exist,function(item) { %>
    <li data-id="<%= item.id %>">
        <i class="icon-remove-sign"></i>
        <a href="<%= item.url %>" target="_blank" class="ellipsis"><%= item.subject %></a>
    <% }); %>
</script>
<script>
var obj;
var response;
(function($){
var page = {
    base:"<?php echo Pi::url(''); ?>",
    id:"<?php echo $form->get('id')->getValue() ?: $form->get('fake_id')->getValue(); ?>",
    ajaxId: function(){
        return "<?php echo $form->get('id')->getValue()? 'id/' . $form->get('id')->getValue() : 'fake_id/' . $form->get('fake_id')->getValue(); ?>";
    },
    status: "<?php echo $draft['status']; ?>",
    form: $("form.row-fluid"),
    from:"<?php echo $from; ?>",
    init: function () {
        this.jump = this.$("[name=jump]");
        <?php if (!$draft['article']) { ?>
        if (this.enableAutosave == 1) {
            setInterval(function(){
                if($.trim(this.$("[name=subject]").val()) || $.trim(this.$("#content").val())){
                   page.submit({msg:false});
                }
            }, this.autosaveInterval * 1000 * 60);
        }
        <?php } ?>
        this.attachmentUrl="<?php echo $this->url('',array('controller' => 'upload', 'action' => 'attachment')); ?>"+this.ajaxId();
        this.featureUrl="<?php echo $this->url('',array('controller' => 'upload', 'action' => 'feature.image')); ?>"+this.ajaxId();
        this.galleryUrl="<?php echo $this->url('',array('controller' => 'upload', 'action' => 'image')); ?>"+this.ajaxId();
        this.timer=setInterval(_.bind(this.loadSaveTime,this),100);
        $("#jsUploadModel").on("click",".close-all",function(){
             $("#jsUploadModel").hide();
        });
        page.form.submit(function(e){
            e.preventDefault();
        });
        this.navChange();
    },
    $:function(selector){
       return this.form.find(selector);
    },
    submit:function(arg){
         var option = {
            url: "<?php echo $this->url('',array('action' => 'save')); ?>",
            msg: true,
            fn: function(){},
            fail:function(){}
         };
         option= _.extend(option,arg);
         this.$("#content").val(this.editor.getData());
         this.$("select:disabled").removeAttr("disabled");
         $.post(option.url, this.form.serialize()).done(function (resp) {
            resp = $.parseJSON(resp);
            if (resp.status == 1) {
                option.msg && page.formTip(resp);
                page.autoSaveTime();
                if(resp.data){
                    if(resp.data.redirect){
                        setTimeout(function(){
                            history.go(-1);
                        },200)
                    }else{
                        page.$("[name=id]").val(resp.data.id);
                        page.id=resp.data.id;
                    }
                }
                option.fn(resp.data);
            }else{
                page.formTip(resp);
                option.fail(resp.data);
            }
        });
        
    },
    editor: CKEDITOR.instances.content,
    autosaveInterval: '<?php echo $autosave_interval; ?>',
    featureImg:"<?php echo $featureThumb; ?>",
    attachFormate:"<?php echo $attachment_extension; ?>".split(","),
    attachMax:"<?php echo $max_attachment_size; ?>",
    imageExtension:"<?php echo $image_extension; ?>".split(","),
    imageMax:"<?php echo $max_image_size; ?>",
    autoSaveTime:function(){
        var i=0;
        $(".auto-save-time").html("Draft saved just now");
        clearInterval(this.saveInterval);
        this.saveInterval=setInterval(function(){
            $(".auto-save-time").html("Draft saved at "+(++i)+" minute ago");
        },1000*60);
    },
    formTip:function(resp){
        $("#jsAlert").remove();
        $(_.template($("#temp-validate").html(),resp)).insertBefore(page.form);
    },
    loadSaveTime:function(){
        if(this.editor.container){
            var c=this.editor.container;
            $(c.$).css("max-width","100%");
            c.appendHtml('<div class="auto-save-bg"><span class="auto-save-time"></span></div>');
            clearInterval(this.timer);
        }
    },
    showUploadModel:function(obj){
        $("#jsUploadModel").html(_.template($("#temp-upload-model").html(),obj)).show();
    },
    getUrlParam:function(param) {
        var src= location.href;
        if (!/^.+\?(.+)$/.test(src)) return "";
        var ret = {},
            s = src.replace( /^.+\?(.+)$/, "$1"),
            arr = s.split("&"),
            i = 0,
            l = arr.length;
        for (; i < l; i++) {
            ret[arr[i].replace(/\=.+/, "")] = arr[i].replace(/.+\=/, "");
        }
        return ret[param] || "";
    },
    navChange:function(){
        if(this.from=="all"){
            $(".nav-tabs:first").find(">").removeClass("active").eq(0).addClass("active");
        }
    }
};
var BasicInputView = Backbone.View.extend({
    el: $("#jsBasicInput"),
    events: {
        "click .subtitle-check":"toggleSub",
        "keypress .control-word":"triggerLeftWord",
        "keyup .control-word":"triggerLeftWord",
        "blur [name=subject]":"checkSubject"
    },
    initialize: function () {
        _.bindAll(this);
        this.leftWord(this.$("[name=subject]"));
        this.leftWord(this.$("[name=subtitle]"));
        this.leftWord(this.$("[name=summary]"));
        this.typeahead(this.$(".author"),"<?php echo $this->url('',array('controller' => 'ajax', 'action' => 'get.fuzzy.author','name'=>'')); ?>","author");
        this.typeahead(this.$(".submitter"),"<?php echo $this->url('',array('controller' => 'ajax', 'action' => 'get.fuzzy.user','name'=>'')); ?>","uid");
    },
    typeahead: function (el, url, name) {
        el.typeahead({
           source: function (query,process) {
                var self=this;
                return $.getJSON(url+encodeURIComponent(query), function (resp) {
                       self.data=resp.data;
                       return process(_.pluck(resp.data, 'name'));
                });
            },
            updater: function (item) {
                page.$("[name="+name+"]").val(_.find(this.data,function(i){
                    if(i.name==item) return i;
                }).id);
                return item;
            }
        }).on("blur",function(){
            var el=$(this),
                v=$.trim(el.val()),
                exist= _.where(el.data("typeahead").data,{name:v});
            if(!exist.length){
                el.val("");
                page.$("[name="+name+"]").val("")
            }else{
                page.$("[name="+name+"]").val(exist[0].id);
            }
        }).on("focus",function(){
            var el=$(this);
             el.data("typeahead").data=[{
                name: $.trim(el.val()),
                id: page.$("[name="+name+"]").val()
            }];
        });
    },
    triggerLeftWord:function(e){
        if(e.keyCode==13){
            e.stopPropagation();
        }
        this.leftWord($(e.target));
    },
    leftWord: function (el) {
        var val=el.val()||"",
            l = val.length,
            size = el.attr("data-size"),
            s=el.parent().find(".left-wrod"),
            q;
        q = size - l;
        if (q >= 0) {
            s.html(q);
        } else {
            el.val(val.substr(0,size));
            s.html(0);
        }
    },
    toggleSub:function(){
        this.$(".subtitle").slideToggle(150);
        if(!this.$(".subtitle-check").prop("checked")){
            this.$("[name=subtitle]").val("");
        }
    },
    checkSubject:function(e){
        var tar=$(e.currentTarget).removeClass("error");
        $.getJSON("<?php echo $this->url('',array('controller' => 'ajax', 'action' => 'check.article.exists')); ?>",{
            subject: $.trim(tar.val()),
            id: page.$("[name=article]").val()
        }).done(function(resp){
             if(resp.status){
                 $("#jsAlert").remove(); 
             }else{
                 page.formTip(resp);
             }
        });
    }
});
var ReleaseProcess = Backbone.View.extend({
    template:"",
    el: $("#jsReleaseProcess"),
    events: {
        "click .save":"save",
        "click .preview": "preview",
        "click .reject":"reject",
        "click .pending": "pending",
        "click .delete": "deleteArticle",
        "click .approve": "approve",
        "click .update":"update",
        "click .edit-time":"popupTime",
        "click .save-time":"saveTime",
        "click .cancel-time":"cancelTime",
        "click .hour-sort":"hourAction",
        "click .minute-sort":"minuteAction"
    },
    initialize:function(){
        $("#datepicker").datepicker({
            format: "yyyy-mm-dd",
            language:"zh-CN"
        });
    },
    save:function(){
         page.submit();
    },
    reject:function(){
          var val=$.trim(this.$(".memo").val()),
              btn=this.$(".reject");
          if(val){
            btn.attr("disabled","disabled");  
            $.getJSON("<?php echo $this->url('',array('action' => 'reject')); ?>",{
                            id:page.id,
                            memo:val   
            }).done(function(resp){
               if(resp.status==1){
                   history.go(-1);
               }else{
                  btn.removeAttr("disabled");
               }
            });
          }
    },
    preview: function () {
        page.submit({fn:function(data){
            if (data.preview_url) {
                $("#jsAlert").remove(); 
                page.$(".hide-preview").attr("href",data.preview_url)[0].click(); 
            } else {
                page.formTip({status:0,message:"The url is not exists, please try again!"});
            }
        }});
    },
    pending: function () {
        var self=this,
            btn=this.$(".pending");
            obj = btn.clone();
        btn.attr("disabled","disabled");
        page.submit({
           url: "<?php echo $this->url('',array('action' => 'publish')); ?>",
           fn:function(resp){
               response = resp;
               self.$(".status").html(resp.status);
               if (!resp.approve) {
                   btn.remove();
               } else {
                   btn.removeAttr("disabled").html(resp.btn_value).removeClass("pending").addClass("approve");
               }
           },
           fail:function(){
               btn.removeAttr("disabled");
           }
        });
    },
    deleteArticle: function () {
        if (confirm("<?php _e('Are you sure delete this article?')?>")) {
           <?php if($draft['article']) { ?>
           location.href="<?php echo $this->url('',array('controller'=>'article','action'=>'delete','id' => $draft['article']))?>"+"?from="+encodeURIComponent(document.referrer);    
           <?php }else { ?>
           location.href="<?php echo $this->url('',array('controller'=>'draft','action'=>'delete')); ?>"+"?id="+page.id+"&from="+encodeURIComponent(document.referrer);    
           <?php } ?>        
        }
    },
    approve: function () {
       var btn=this.$(".approve").attr("disabled","disabled");
        page.submit({
           url:"<?php echo $this->url('',array('action' => 'approve')); ?>",
           fn:function(){
               $("#jsAlert a").remove();
           },
           fail:function(){
              btn.removeAttr("disabled");
           }   
        });
    },
    update:function(){
        var btn=this.$(".update").attr("disabled","disabled");
        page.submit({
           url:"<?php echo $this->url('',array('action' => 'update')); ?>" ,
           fn:function(){
               $("#jsAlert a").remove();
           },
            fail:function(){
              btn.removeAttr("disabled");
           } 
        });
    },
    popupTime:function(){
        var el=this.$(".article-flow"),
            p =$("#datepicker"),
            t=new Date;
            el.addClass("editing");
            p.data("datepicker").setValue();
            p.data("datepicker").show();
            this.$(".text-hour").val(t.getHours());
            this.$(".text-minute").val(t.getMinutes());
    },
    saveTime:function(){
        var s="Scheduled at ",
            s1=$("#datepicker").val()+" "+this.$(".text-hour").val()+":"+this.$(".text-minute").val();
        s+='<strong>'+s1+'</strong>';
        this.$(".publish-time-edit").html(s);
        $("[name=time_publish]").val(s1);
        this.cancelTime();
    },
    cancelTime:function(){
        this.$(".article-flow").removeClass("editing");  
    },
    hourAction:function(e){
        var el= this.$(".text-hour"),
            v;
        if($(e.target).attr("data-action")){
           v=parseInt(el.val())-1;
           v=v<0?23:v;
           el.val(v);
        }else{
           v=parseInt(el.val())+1;
           v=v>24?0:v; 
           el.val(v); 
        }
    },
    minuteAction:function(e){
        var el= this.$(".text-minute"),
            v;
        if($(e.target).attr("data-action")){
           v=parseInt(el.val())-1;
           v=v<0?59:v;
           el.val(v); 
           el.val(v);
        }else{
           v=parseInt(el.val())+1;
           v=v>59?0:v;  
           el.val(v); 
        }
    }
});
function fileupload(name,url,formate,size,collection) {
    var self=this;
    var obj = {
        url: url,
        formData: function () {
            return [];
        },
        submit:function(e,data){
            var f = data.files[0],
                fm = f.name.replace(/.*\.(.+)$/, "$1"),
                fn = function(message){
                    page.showUploadModel({
                        message: message,
                        fileName:f.name
                    });
                    return false;
               };
            if(formate && _.indexOf(formate,fm)==-1 ){
                 return fn("has a false extension");
            }
            if(f.size && f.size > size ) {
                 return fn("exceeds the defined ini size");    
            }
            if(collection){
                collection.add({
                    originalName: f.name,
                    progress: 2,
                    download_url: "javascript:void(0)"
                });
                f.el = self.$("[data-cid=" + collection.models[collection.length - 1].cid + "]");
            }else{
                f.el = self.render({
                    progress: 2
                });
            } 
        },
        progress: function (e, data) {
            var el = data.files[0].el,
                progress = parseInt(data.loaded / data.total * 100, 10);
            el.find(".bar").css("width", progress + "%");
        },
        done: function (e, data) {
                var el = data.files[0].el,
                    resp;
                if(data.jqXHR.responseText){
                    resp = $.parseJSON(data.jqXHR.responseText);
                }else{
                    resp = $.parseJSON($.trim(data.result.contents().find('body').html()));
                }
                if (resp.status == 1) {
                    el.find(".bar").css("width", "100%");
                    resp.data['progress']=0;
                    if (collection) {
                        collection.getByCid(el.attr("data-cid")).set(resp.data);
                    } else {
                        self.render(resp.data);
                    }
                } else {
                   if(collection){
                      collection.remove(el.attr("data-cid"));
                      el.remove();
                   }else{
                      self.render();
                   }
                   page.showUploadModel({
                        message: _.values(resp.message),
                        fileName:data.files[0].name
                    });
                }
            }
    };
    if (!$.support.xhrFileUpload) {  //ie upload
       _.extend(obj, {
            forceIframeTransport: true
        });
    }
   this.$("input[name="+name+"]").fileupload(obj);
}    
var attachmentCollection = new Backbone.Collection(<?php echo json_encode($attachments); ?>);
var AttachmentItemView = Backbone.View.extend({
    className: "attachment-item",
    events: {
        "click .delete": "removeFile",
        "click .insert": "insertEditor",
        "click .cancel": "cancel"
    },
    initialize: function () {
        this.model.on("destroy", this.remove, this);
        this.model.on("change", this.render, this);
        this.$el.attr("data-cid", this.model.cid);
    },
    render: function () {
        this.$el.html(_.template($("#temp-attachment").html(), this.model.toJSON(), {
            variable: 'data'
        }));
        return this;
    },
    removeFile: function () {
        if (confirm("<?php _e('Delete this attachment will also remove it in editor ')?>")) {
            $(page.editor.document.getBody().$).find("a[href='" + this.model.get("download_url") + "']").remove();
            this.model.destroy({
                url: this.model.get("delete_url")
            });
        }
    },
    insertEditor: function () {
        var html = '<a href="<%= download_url %>"><%= originalName %></a>';
        page.editor.insertHtml(_.template(html, this.model.toJSON()));
        
    },
    cancel: function () {
        this.model.destroy();
    }
});
var AttachmentListView = Backbone.View.extend({
    el: $("#jsAttachment"),
    initialize: function () {
        this.attachmentList = this.$(".attachment-list");
        attachmentCollection.on("add", this.addOne, this);
        this.render();
        fileupload.call(this,"attachment",page.attachmentUrl,page.attachFormate,page.attachMax,attachmentCollection);
    },
    render: function () {
        var m = attachmentCollection.models;
        for (var i = 0, l = m.length; i < l; i++) {
            this.addOne(m[i]);
        }
    },
    addOne: function (model) {
        this.attachmentList.append(new AttachmentItemView({
            model: model
        }).render().el);
    }
});
var FeatureView = Backbone.View.extend({
    el: $("#jsFeature"),
    events:{
      "click .icon-remove":"clickRemove"  
    },
    initialize: function () {
        if (page.featureImg) {
            this.render({
                preview_url: page.featureImg
            });
        }
        fileupload.call(this,"featureImage",page.featureUrl,page.imageExtension,page.imageMax);
    },
    render: function (obj) {
        return $(_.template($("#temp-feature").html(), obj || {}, {
            variable: 'data'
        })).appendTo(this.$(".upload-image-wrap").html(""));
    },
    clickRemove:function(){
        var self=this;
        console.log(this);
        $.getJSON("<?php echo $this->url('',array('controller' => 'ajax', 'action' => 'removeFeatureImage')); ?>"+page.ajaxId()).done(function(resp){
            self.render({
                preview_url:""
            });
        });
    }
});
var galleryCollection = new Backbone.Collection(<?php echo json_encode($images); ?>);
var GalleryItemView = Backbone.View.extend({
    className: "upload-image-wrap",
    events: {
        "click .icon-remove": "removeFile",
        "click img": "insertEditor"
    },
    initialize: function () {
        this.model.on("destroy", this.remove, this);
        this.model.on("change", this.render, this);
        this.$el.attr("data-cid", this.model.cid);
    },
    render: function () {
        this.$el.html(_.template($("#temp-gallery").html(), this.model.toJSON(), {
            variable: 'data'
        }));
        return this;
    },
    removeFile: function () {
        $(page.editor.document.getBody().$).find("img[src='" + this.model.get("thumb_url") + "']").remove();
        this.model.destroy({
            url: this.model.get("delete_url")
        });
    },
    insertEditor: function () {
        page.editor.insertHtml('<a href="'+this.model.get("preview_url")+'" target="_blank"><img src="' + this.model.get("thumb_url") + '"></a>');
        page.editor.focus();
    }
});
var GalleryListView = Backbone.View.extend({
    el: $("#jsGallery"),
    events:{
      "click .widget-header":"toggleShow"  
    },
    initialize: function () {
        this.galleryList = this.$(".gallery-list");
        galleryCollection.on("add", this.addOne, this);
        this.render();
    },
    render: function () {
        var m = galleryCollection.models;
        for (var i = 0, l = m.length; i < l; i++) {
            this.addOne(m[i]);
        }
        fileupload.call(this,"image",page.galleryUrl,page.imageExtension,page.imageMax,galleryCollection);
    },
    addOne: function (model) {
        this.galleryList.append(new GalleryItemView({
            model: model
        }).render().el);
    },
    toggleShow:function(){
        this.$(".widget-header").toggleClass("active");
        this.$(".widget-body").slideToggle(300);
    }
});
var TipView = {
    template: '<% _.each(search,function(item) { %><li class="typeahead-item" data-id="<%= item.id %>"><a href="javascript:void(0)" <% if(_.indexOf(exist,item.id)!=-1) { %>style="color:#B94A48;"<% } %> ><%= item.name %></a></li><% }); %>',
    template2:'<%_.each(data,function(item) { %><span class="label label-info" data-id="<%= item.id %>"><%= item.name %><i class="icon-remove"></i></span><% }); %>',
    events: {
        "mouseenter .typeahead-item": "hoverItem",
        "click .typeahead-item": "select",
        "click .icon-remove": "removeClickOne",
        "click .widget-body": "enterFocus"
    },
    initialize: function (options) {
        this.input = this.$("input").eq(0);
        this.hdInput = this.$("input[type=hidden]");
        this.$menu = this.$(".typeahead");
        this.rejectNewOne = options.rejectNewOne || false;
        if(options.model){
            this.model =new Backbone.Collection(options.model);
        }else{
            this.model = new Backbone.Collection(this.handler(this.hdInput.val()));
        }
        this.model.on("add", this.render, this);
        this.model.on("remove", this.render, this);
        this.render();
        this.input.on("keyup",_.bind(this.keyup,this)).on("keydown",_.bind(this.keydown,this)).on('blur',_.bind(this.blur,this));
    },
    render: function () {
        this.$(".select-list").html(_.template(this.template2,this.model.toJSON(),{variable:"data"}));
        this.hdInput.val(this.model.pluck("id"));
    },
    keyup: function (e) {
        var el=this.input;
        if(/[\uFF0C\,]$/.test(el.val())){ //chinese comma
            el.val(el.val().replace(/[\uFF0C\,]$/,""));
            $.trim(el.val()) &&  this.addNewOne();
        }
        if(e.keyCode==13 && $.trim(el.val()) && !this.shown) {
            this.addNewOne();
        }
        switch(e.keyCode) {
            case 40: // down arrow
            case 38: // up arrow
            case 16: // shift
            case 17: // ctrl
            case 18: // alt
            case 39:
            case 37:
            case 188: //,
              break;
            case 9: // tab
            case 13: // enter
              if (!this.shown) return;
              this.select();
              break;
            case 27: // escape
              if (!this.shown) return;
              this.hide();break;
            default:
              this.lookup();
        }
        e.stopPropagation();
        e.preventDefault();
    },
    keydown:function(e){
        var el=this.input;
        if(e.keyCode==8 && !el.val()){
            this.model.pop();
            this.hide();
        }
        if (!this.shown) return;
        switch(e.keyCode) {
        case 9: // tab
        case 13: // enter
        case 27: // escape
          e.preventDefault();
          break;
        case 38: // up arrow
          e.preventDefault();
          this.prev();
          break;
        case 40: // down arrow
          e.preventDefault();
          this.next();
          break;
      }
    },
    lookup: function () {
        var val= this.input.val().replace(/[\,，]+$/g, "");
        if (val) {
            $.getJSON(this.options.getUrl + val).done(_.bind(function (result) {
                var d = this.handler(result.data),
                    l = d.length,
                    html = "";
                if (l) {
                    for (var i = 0; i < l; i++) {
                        d[i].name = d[i].name.replace(new RegExp('(' + val + ')', 'ig'), function ($1, match) {
                            return '<strong>' + match + '</strong>'
                        });
                    }
                    this.$menu.html(_.template(this.template,{
                        search:d,
                        exist: this.model.pluck('id')
                    })).find("li:first").addClass("active");
                    this.show();
                    
                }else{
                    this.hide();
                }
            }, this));
        }
    },
    blur: function () {
        var self = this;
        setTimeout(function () {
            self.hide(); 
        }, 300);
    },
    select: function () {
        var el = this.$menu.find('.active');
        if(!_.contains(this.hdInput.val().split(","), el.attr("data-id"))){
            this.model.add({
                id: el.attr("data-id"),
                name: $.trim(el.text())
            });
        }
        this.input.val("");
        this.hide();
    },
    removeClickOne: function (e) {
        this.model.remove($(e.target).parent().attr("data-id"));
    },
    hoverItem: function (e) {
        this.$menu.find('.active').removeClass('active');
        $(e.currentTarget).addClass("active");
    },
    enterFocus: function () {
        this.input.focus();
    },
    handler: function (data) {
        if(!data) return [];
        data= _.isArray(data)?data:data.split(",");
        if(data.length){
           if (!_.isObject(data[0])) {
            data = _.map(data, function (item) {
                return {
                    name: item,
                    id: item
                }
            });
          }
       }
       this.respDate=data;
       return data;
    },
    hide:function(){
      this.$menu.hide();
      this.shown = false;
    },
    show:function(){
      this.$menu.show();
      this.shown = true;
    },
    next: function () {
      var active = this.$menu.find('.active').removeClass('active'),
          next = active.next();
      if (!next.length) {
        next = $(this.$menu.find('li')[0]);
      }
      next.addClass('active');
    },
    prev: function () {
      var active = this.$menu.find('.active').removeClass('active'),
          prev = active.prev();
      if (!prev.length) {
        prev = this.$menu.find('li').last();
      }
      prev.addClass('active');
    },
    addNewOne:function(){
        var el=this.input,
            val=el.val();
        if(this.rejectNewOne) {
             if(!_.contains(this.hdInput.val().split(","), val) && _.where(this.respDate,{name:val}).length){
                 this.model.add({
                    id: val,
                    name: val
                });
             }
         } else{
             if(!_.contains(this.hdInput.val().split(","), val)) {
                 this.model.add({
                    id: val,
                    name: val
                });
             }
         } 
        el.val("");
    }
};
var TipListView = Backbone.View.extend(TipView);
$("#jsSeo").on("click",".widget-header",function(){
    $("#jsSeo").find(".seo-other").toggleClass("hide");
    $("#jsSeo").find(".widget-header").toggleClass("active");
});
var relatedCollection = new Backbone.Collection(<?php echo json_encode(array_values($related)); ?>);
var searchCollection = new Backbone.Collection;
var RelatedView = Backbone.View.extend({
    el: $("#jsRelated"),
    initialize: function () {
        _.bindAll(this);
        this.modal = this.$(".a-related-modal");
        this.serachCon=this.$(".a-search").scroll(this.scrollLoad);
        relatedCollection.on("add", this.render);
        relatedCollection.on("remove", this.render);
        this.render();
    },
    events: {
        "click .a-close":"close",
        "click .btn-search":"btnSearch",
        "click .search-check":"clickAddOne",
        "click .manually-related": "showRelated",
        "click .link-btn": "popup",
        "click .icon-remove-sign": "clickRemoveOne",
        "click .other-related": "hideRelated",
        "keyup [name=keyword]":"enterSearch"
    },
    popup: function () {
        this.modal.show();
    },
    showRelated: function () {
        var el=this.$(".article-related-list");
        if(el.find("li").length){
            el.show();
        }else{
            el.hide();
        }
    },
    hideRelated: function () {
        this.$(".article-related-list").hide();
    },
    close: function () {
        this.modal.fadeOut(150);
    },
    enterSearch:function(e){
        if(e.keyCode==13){
            this.btnSearch();
        }
    },
    btnSearch:function(){
        this.$(".a-search ul").html("");
        this.page=0;
        this.search();  
    },
    scrollLoad:function(){
         var sh= this.serachCon[0].scrollHeight,
             sp= this.serachCon.scrollTop(),
             h= this.serachCon.outerHeight(),
             l= this.$(".a-search ul").find(">li").length;
             if(sp+h>=sh && l<this.paginator.totalCount){
                 this.search();
             }
    },
    search: function () {
        var ky= $.trim(this.$("[name=keyword]").val()),
            self=this;
        ky && this.$(".loadimage").removeClass("invisible");
        if(!this.locked){
            this.page++;
            this.locked=true;   
            if(ky){
                $.getJSON("<?php echo $this->url('',array('controller' => 'ajax', 'action' => 'get.fuzzy.article')); ?>", {
                    type: this.$("[name=type]").val(),
                    keyword: ky,
                    limit: 15,
                    page: this.page
                }).done(function(resp){
                    if(resp.status==1){
                        var u=self.serachCon.find("ul");
                        u.append(_.template($("#temp-related-search").html(),{
                            search: resp.data,
                            exist: relatedCollection.toJSON()
                        }));
                        self.paginator=resp.paginator;
                        self.$(".searchlength").html(u.find(">li").length);
                        self.$(".searchtotal").html(resp.paginator.totalCount);
                        self.locked=false;
                        self.$(".loadimage").addClass("invisible");
                    }
                });
            }
        }       
    },
    clickAddOne: function (e) {
        var tar = $(e.target),
            el = tar.parent(),
            id = el.attr("data-id"),
            a = el.find("a");
        if (tar.prop("checked")) {
            relatedCollection.add({
                id: id,
                url: a.attr("href"),
                subject: a.attr("title")
            });
        } else {
            relatedCollection.remove(id);
        }
    },
    clickRemoveOne: function (e) {
        relatedCollection.remove($(e.target).parent().attr("data-id"));
    },
    render: function (search) {
        this.$(".a-selected ul").html(_.template($("#temp-related-selected").html(),{
               exist: relatedCollection.toJSON()
        }));
        this.$(".article-related-list").html(this.$(".a-selected").html());
        this.showRelated();
        this.serachCon.find(".search-check").removeAttr("checked");
        _.each(relatedCollection.pluck("id"),_.bind(function(id){
             this.serachCon.find("[data-id="+id+"]").find(".search-check").attr("checked","checked");
        },this));
        $("[name=related]").val(relatedCollection.pluck("id").join(","));
    }
});
page.init();
new BasicInputView;
new ReleaseProcess; 
new AttachmentListView;
new FeatureView;
new GalleryListView;
new RelatedView;
new TipListView({
    el: $("#jsTag"),
    getUrl: "<?php echo $this->url('',array('controller' => 'ajax', 'action' => 'get.fuzzy.tag','name'=>'')); ?>"
});

})(jQuery)

</script>
